---
- name: test task
  shell: |
    echo $(env) > test.txt

- name: creates backend app dir
  file:
    path: "/home/{{ ansible_user }}/backend-app"
    state: directory

- name: unarchive backend filesl
  unarchive:
    src: artifact.tar.gz
    dest: "/home/{{ ansible_user }}/backend-app"

- name: install node deps
  shell: |
    cd /home/{{ ansible_user }}/backend-app
    npm install


# - name: create .env
#   shell: |
#     cd /home/{{ ansible_user }}/backend-app/dist
#     echo "NODE_ENV=local VERSION=1 TYPEORM_CONNECTION=postgres TYPEORM_MIGRATIONS_DIR=./migrations TYPEORM_ENTITIES=./modules/domain/**/*.entity{.ts,.js} TYPEORM_MIGRATIONS=./migrations/*.ts TYPEORM_HOST=database-1.ckkgyer2t3tn.us-east-1.rds.amazonaws.com TYPEORM_PORT=5432 TYPEORM_USERNAME=postgres TYPEORM_PASSWORD=Allah70410590 TYPEORM_DATABASE=demo" > .env
    

- name: run app using pm2
  shell: |
    cd /home/{{ ansible_user }}/backend-app/dist
    pm2 stop default
    pm2 start main.js
    pm2 describe main
    # cat /home/ubuntu/.pm2/logs/main-error.log
    # cat /home/ubuntu/.pm2/logs/main-out.log
  register: excute_node

- name: print env vars
  shell: |
    pm2 describe main
    # cat /home/ubuntu/.pm2/logs/main-error.log
    # cat /home/ubuntu/.pm2/logs/main-out.log
  register: excute_node2

- name: print messages
  debug:
    msg: "{{excute_node.stdout_lines}}"

- name: print messages 2
  debug:
    msg: "{{excute_node2.stdout_lines}}"

- name: configure pm2 to start as a service
  become: true
  shell: |
    env PATH=$PATH:/usr/local/bin pm2 startup systemd -u ubuntu --hp /home/ubuntu
